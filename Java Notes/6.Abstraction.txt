ABSTRACTION:
	Hiding Implementation details
Types:
1.Partial Abstraction
2.Fully Abstraction 

1.Partial Abstraction – abstract class  - public abstract class Employee {		}
	Contain both abstract and non-abstract methods inside the abstract class Block.

	Abstract method – We can’t write business logic.
		Eg: public abstract void details();

	Non-Abstract method – we can write business logic .
		Eg: public void details(){
				…………..
					}

We cannot create object for abstract class
To access methods in another class we have to use extends keyword.


2.Fully abstraction – Interface (public interface Employee{		
-------------------					  }
	- Contain only abstract methods
	-We can’t create objects
	-to access the methods in another class we have to use implements keyword


Task:
QUESTION 01:
------------
     Project   :BikeInformation
     Package   :org.bike
     Interface :Bike
     Methods   :cost(),speed()

     Class     :Ktm
     Methods   :cost(),speed()

Description:
cost(),speed() is just a templete in Bike Interface and You have to override the method with cost(),speed() in Ktm class.

QUESTION 02:
-------------
     Project   :Computer
     Interface :HardWare
     Methods   :hardwareResources()

     Interface :Software
     Methods   :softwareResources()

     Class     :Desktop
     Methods   :desktopModel()

Description:
create 2 Interface and archieve multiple inheritance.	













