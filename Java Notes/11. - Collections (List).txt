Collections: --(Pre-defined interface)
	Collection is used to store multiple values of dissimilar data type in a single variable.
	Memory is not fixed one
	Memory wastage is low
	

Types:
 1.List (Interface)
 2.Set (Interface)
 3.Map(Interface)

1.List:
  * List is pre-defind interface which is present in java.util package
  * List is an Index based one
  * List will allow Duplicates
  * List prints Insertion order
  * List accepts n number of null values
  * List represented is []

Types of class presented in List:
 Array List 	– Class
 Linked List	– Class
 Vector 		– Class

Object creation for List (**Up Casting**)

1.Upcasting:
 	Converting smaller data type to larger data type
Int to long
Example: 
List li= new Array List;


 List l = new ArrayList();
 List l = new LinkedList();
 List l = new Vector();

Explanation for List li = new ArrayList();
	**To call the method, we need object
	**List is an interface, SO we can’t create object for an interface
	**Under the List interface we have 3 classes Implementing this list interface
	**So creating object for the class we have under the List interface and assign that created object to List Variable (UPCASTING)
	**It is come under upcasting

List Methods: (Presented in List interface)
1. add() – to add a value in a list
2. size() – to find the size of the list
3. get(index) – to get the particular value form the list
4. add(index, value) – to add a value at particular position
5. set (Index, value) – to replace a value at particular index position 
6. remove(index) – to remove the particular value by using index
7. contains(value) – To check whether the value is present or not
8. isEmpty() – To check whether the list is empty or not
9.indexOf(value) – To find the index position of particular value (First Occurrence)
10. lastIndexOf(value) – (Last Occurrence)
11.clear() – to delete all the elements in the list
12. addAll(listRef) – To copy and paste the elements from one list to another list
13. retailAll(listRef) – To get common values from both list
14.removeAll(listRef) – to remove common values from the both list.


Generic List:
List <Integer> - Inside the <> we have to pass wrapper class.
It is used to store only similar data type.

Classes of primitive data type – Wrapper class
int – Integer
long – Long
char – Character


Difference between Array List and Linked List
Array list 							Linked List
1.Insertion and deletion are performance		1.Insertion and deletion are performance 
Wise slow							wise fast
2.Searching and retrieving is fast			2. Searching and retrieving is slow	


Task:
QUESTION 1:
-------------
QUESTION 1.1:
-------------
Description : Create a new ArrayListlist with values and find the length of it
              Input : List = 10,20,30,90,10,10,40,50

QUESTION 1.2:
-------------
Description : Create a new LinkedListlist with values and find the length of it
              Input : List = 100,200,300,400,500,600,700

QUESTION 1.3:
-------------
Description : Create a new vector with values and find the length of it
              Input : List = 105,205,305,405,505,605,705,805

QUESTION 1.4:
-------------
Description : Create a new LinkedListlist with values and find the size() of it. 
              Input : List = 100,200,300,400,500,600,700



QUESTION 2:
------------
QUESTION 2.1:
--------------
Description : Get the first index value of 10 
              Input:   List = 10,20,30,90

QUESTION 2.2:
--------------
Description : Get the last index value of 10 
              Input:   List = 10,20,30,90,10,10,40,50

QUESTION 2.3:
--------------
Description : Get the index value of 50 
              Input:   List = 10,20,30,90,10,10,40,50

QUESTION 2.4:
--------------
Description : Get the index value of 90 
              Input:   List = 10,20,30,90,10,10,40,50

QUESTION 2.5:
--------------
Description : Get the each index value of 10 present in below list 
              Input:   List = 10,20,30,90,10,10,40,50,10

QUESTION 2.6:
--------------
Description : Get the each index value of 70 present in below list 
              Input:   List = 10,20,30,90,10,10,40,50,10


QUESTION 3:
------------
QUESTION 3.1:
--------------
Description : Get the value present at 2nd index
              Input:   List = 10,20,30,40,50,60

QUESTION 3.2:
--------------
Description : Get the value present at 4th index
              Input:   List = 100,200,300,400,500,600,700

QUESTION 3.3:
--------------
Description : Get the value present at 8th index
              Input:   List = 105,205,305,405,505,605,705,805

QUESTION 3.4:
--------------
Description : Get the each value of list by using normal for loop
              Input:   List = 105,205,305,405,505,605,705,805

QUESTION 3.5:
--------------
Description : Get the each value of list by using enhanced for loop
              Input:   List = 105,205,305,405,505,605,705,805




QUESTION 4:
------------
QUESTION 4.1:
--------------
Description : Remove the value present at 2nd index
              Input:   List = 10,20,30,40,50,60

QUESTION 4.2:
--------------
Description : Remove the value present at 10th index 
              Input:   List = 10,20,30,90,10,10,40

QUESTION 4.3:
--------------
Description : Remove the last value of 10 present in the list  
              Input:   List = 10,20,30,90,10,10,40

QUESTION 5:
-------------
QUESTION 5.1:
-------------
Description : Add a value 50 in the 2nd index and display the list after adding.
              Input : List = 10,20,30,90,10,10,40,50

QUESTION 5.2:
-------------
Description : Add a value 70 at the end of the list
              Input : List = 10,20,30,90,10,10,40,50

QUESTION 5.3:
-------------
Description : Add a value 80 at the 8th index of list
              Input : List = 10,20,30,90,10,10,40,50

QUESTION 5.4:
-------------
Description : Add a value 100 at the last index of 10 in the list
              Input : List = 10,20,30,90,10,10,40,50

QUESTION 6:
-----------
QUESTION 6.1:
------------
Description : Replace the value 300 into 350 in the list
              Input : List = 100,200,300,400,500,600,700

QUESTION 6.2:
--------------
Description : Replace the value present in 7th index as 90 
              Input:   List = 10,20,30,90,10,10,40,50,10

QUESTION 6.3:
--------------
Description : Replace the 10 into 100 in List
        Input:   List = 10,20,30,90,10,10,40,50,30
        Output:  List = 100,20,30,90,100,100,40,50,30


QUESTION 7:
-------------
QUESTION 7.1:
--------------
Description : Create a new ArrayListlists with values and return the common values
              Input : List = 10,20,30,90,10,10,40,50
              Input : List = 30,40,50,60,80

QUESTION 7.2:
--------------
Description : Create a new ArrayListlists with values and return the common values
              Input : List = 10,20,30,90,10,10,40,50
              Input : List = 10,20,60,50,40,70,80,90

QUESTION 7.3:
--------------
Description : Create a new ArrayListlists with values and return the common values
              Input : List = 10,20,30,40,50,60,70,80
              Input : List = 100,200,300,400,500,600,700,8000

QUESTION 8:
-------------
QUESTION 8.1:
--------------
Description : Create a new ArrayListlists with values and perform removeAll() function
              Input : List = 10,20,30,90,10,10,40,50
              Input : List = 30,40,50,60,80

QUESTION 8.2:
--------------
Description : Create a new ArrayListlists with values and perform removeAll() function
              Input : List = 10,20,30,90,10,10,40,50
              Input : List = 10,20,60,50,40,70,80,90

QUESTION 8.3:
--------------
Description : Create a new ArrayListlists with values and perform removeAll() function
              Input : List = 10,20,30,40,50,60,70,80
              Input : List = 100,200,300,400,500,600,700,8000

